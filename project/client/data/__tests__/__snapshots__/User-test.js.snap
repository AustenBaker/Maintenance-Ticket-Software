// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`User renders the user profile editing screen 1`] = `
<View
  style={
    Object {
      "alignSelf": "center",
      "flex": 1,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 17,
      }
    }
  >
    Name:
     
    <TextInput
      allowFontScaling={true}
      autoCompleteType="name"
      errormessage="This field is required."
      keyboardType="default"
      label="First Name"
      maxLength={32}
      onChangeText={[Function]}
      placeholder="First Name"
      rejectResponderTermination={true}
      selectTextOnFocus={true}
      style={
        Object {
          "color": "#FFF",
          "fontSize": 17,
        }
      }
      textContentType="name"
      underlineColorAndroid="transparent"
      value="First Name"
    />
      
    <TextInput
      allowFontScaling={true}
      autoCompleteType="name"
      errormessage="This field is required."
      keyboardType="default"
      label="Last Name"
      maxLength={32}
      onChangeText={[Function]}
      placeholder="Last Name"
      rejectResponderTermination={true}
      selectTextOnFocus={true}
      style={
        Object {
          "color": "#FFF",
          "fontSize": 17,
        }
      }
      textContentType="familyName"
      underlineColorAndroid="transparent"
      value="Last Name"
    />
  </Text>
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 17,
      }
    }
  >
    Email:
      
    <TextInput
      allowFontScaling={true}
      autoCompleteType="email"
      errormessage="This field is required.  Please enter valid email address."
      keyboardType="email-address"
      label="Email"
      maxLength={32}
      onChangeText={[Function]}
      placeholder="your.email@server.com"
      rejectResponderTermination={true}
      selectTextOnFocus={true}
      style={
        Object {
          "color": "#FFF",
          "fontSize": 17,
        }
      }
      textContentType="emailAddress"
      underlineColorAndroid="transparent"
      value="default@CastlebergCommunities.com"
    />
  </Text>
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 17,
      }
    }
  >
    Phone:
      
    <TextInput
      allowFontScaling={true}
      autoCompleteType="tel"
      errormessage="Please enter valid phone number: ###-###-####"
      keyboardType="phone-pad"
      label="Phone Number"
      maxLength={12}
      onChangeText={[Function]}
      placeholder="###-###-####"
      rejectResponderTermination={true}
      selectTextOnFocus={true}
      style={
        Object {
          "color": "#FFF",
          "fontSize": 17,
        }
      }
      textContentType="telephoneNumber"
      underlineColorAndroid="transparent"
      value="000-000-0000"
    />
  </Text>
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 17,
      }
    }
  >
    

    Preferred Contact:
      
    <View>
      <RCTPicker
        items={
          Array [
            Object {
              "label": "Email",
              "textColor": undefined,
              "value": "email",
            },
            Object {
              "label": "Text",
              "textColor": undefined,
              "value": "text",
            },
          ]
        }
        onChange={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </Text>
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 17,
      }
    }
  >
    

    Entry Permission:
      
    <View>
      <RCTPicker
        items={
          Array [
            Object {
              "label": "Allow accompanied entry",
              "textColor": undefined,
              "value": "accompanied",
            },
            Object {
              "label": "Notify before entry",
              "textColor": undefined,
              "value": "notify",
            },
            Object {
              "label": "Allow entry",
              "textColor": undefined,
              "value": "any",
            },
          ]
        }
        onChange={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
    


  </Text>
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 17,
      }
    }
  >
    Note:
    
  
    <TextInput
      allowFontScaling={true}
      defaultValue=""
      keyboardType="default"
      label="Note"
      maxLength={255}
      multiline={true}
      numberOfLines={4}
      onChangeText={[Function]}
      placeholder="Enter note here."
      rejectResponderTermination={true}
      selectTextOnFocus={true}
      style={
        Object {
          "color": "#FFF",
          "fontSize": 17,
        }
      }
      testID="note-edit"
      underlineColorAndroid="transparent"
    />
  </Text>
  <View
    accessibilityLabel="Update Profile Button"
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="update-button"
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Update
      </Text>
    </View>
  </View>
  <View
    accessibilityLabel="Reset Profile Button"
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="reset-button"
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Reset
      </Text>
    </View>
  </View>
  <View
    accessibilityLabel="Cancel Button"
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="cancel-button"
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Cancel
      </Text>
    </View>
  </View>
</View>
`;

exports[`User renders the user screen 1`] = `
<View
  style={
    Object {
      "alignSelf": "center",
      "flex": 1,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 17,
      }
    }
    testID="user-name"
  >
    Name:
     
    <Text
      style={
        Object {
          "color": "#FFF",
          "fontSize": 17,
        }
      }
      testID="user-first"
    >
      First Name
    </Text>
     
    <Text
      style={
        Object {
          "color": "#FFF",
          "fontSize": 17,
        }
      }
      testID="user-last"
    >
      Last Name
    </Text>
  </Text>
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 17,
      }
    }
    testID="user-email"
  >
    Email: 
    default@CastlebergCommunities.com
  </Text>
  
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 17,
      }
    }
    testID="user-entry"
  >
    Entry Permission:
      Accompanied entry only.
    


  </Text>
  
  <View
    accessibilityLabel="Edit Profile Button"
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="edit-button"
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Edit Profile
      </Text>
    </View>
  </View>
</View>
`;
