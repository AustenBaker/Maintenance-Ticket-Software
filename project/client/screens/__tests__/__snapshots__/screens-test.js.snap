// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Screen Rendering Tests LoginPage login screen rendering 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#121212",
      "flex": 1,
    }
  }
>
  <Image
    source={1}
    style={
      Object {
        "height": 80,
        "marginLeft": -10,
        "marginTop": 3,
        "resizeMode": "contain",
        "width": 100,
      }
    }
  />
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 34,
        "marginBottom": 8,
        "marginTop": 8,
        "textAlign": "center",
      }
    }
  >
    Welcome Back
  </Text>
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    keyboardAppearance="dark"
    onChangeText={[Function]}
    placeholder="Username"
    placeholderTextColor="#8E8E93"
    rejectResponderTermination={true}
    style={
      Object {
        "borderBottomWidth": 2,
        "borderColor": "#FFF",
        "color": "#FFF",
        "fontSize": 18,
        "height": 40,
        "marginBottom": 8,
        "marginTop": 8,
        "width": "90%",
      }
    }
    underlineColorAndroid="transparent"
  />
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    keyboardAppearance="dark"
    onChangeText={[Function]}
    placeholder="Password"
    placeholderTextColor="#8E8E93"
    rejectResponderTermination={true}
    secureTextEntry={true}
    style={
      Object {
        "borderBottomWidth": 2,
        "borderColor": "#FFF",
        "color": "#FFF",
        "fontSize": 18,
        "height": 40,
        "marginBottom": 8,
        "marginTop": 8,
        "width": "90%",
      }
    }
    underlineColorAndroid="transparent"
  />
  <View
    accessibilityLabel="Sign In Button"
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Sign In
      </Text>
    </View>
  </View>
  <View
    accessibilityLabel="Go to Sign Up page"
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Donâ€™t have an account?
      </Text>
    </View>
  </View>
  <View
    accessibilityLabel="Secret Dev Button to Skip Sign In"
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Skip Sign In
      </Text>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`Screen Tests Rendering tests CreateTicketScreen rendering 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#000",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    collapsable={false}
    contentContainerStyle={
      Object {
        "flexGrow": 1,
        "justifyContent": "center",
      }
    }
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#FFF",
              "fontSize": 18,
              "height": 20,
              "marginVertical": 4,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#FFF",
                "fontSize": 18,
                "height": 20,
                "marginVertical": 4,
                "width": "90%",
              }
            }
          >
            Emergency?
              
            No
              
          </Text>
          <RCTSwitch
            accessibilityRole="switch"
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onTintColor="#81b0ff"
            style={
              Array [
                Object {
                  "height": 31,
                  "width": 51,
                },
                Object {
                  "backgroundColor": "#3e3e3e",
                  "borderRadius": 16,
                },
              ]
            }
            thumbTintColor="#f4f3f4"
            tintColor="#767577"
            value={false}
          />
          <Text
            style={
              Object {
                "color": "#FFF",
                "fontSize": 18,
                "height": 20,
                "marginVertical": 4,
                "width": "90%",
              }
            }
          >
              
            Yes
          </Text>
        </Text>
        <Text>
          

        </Text>
        <View
          style={
            Object {
              "alignContent": "stretch",
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "marginHorizontal": 20,
              "minWidth": "100%",
              "paddingHorizontal": 55,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 0.4,
                "minWidth": "50%",
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#FFF",
                  "fontSize": 18,
                  "height": 20,
                  "marginVertical": 4,
                  "width": "90%",
                }
              }
            >
              Unit Assigned:
               
            </Text>
            <TextInput
              allowFontScaling={true}
              keyboardAppearance="dark"
              onChangeText={[Function]}
              placeholder="Unit Number"
              placeholderTextColor="#8E8E93"
              rejectResponderTermination={true}
              style={
                Object {
                  "borderBottomWidth": 2,
                  "borderColor": "#7D7E7D",
                  "color": "#FFF",
                  "fontSize": 18,
                  "height": 40,
                  "marginVertical": 8,
                  "width": "90%",
                }
              }
              underlineColorAndroid="transparent"
            />
          </View>
          <View
            style={
              Object {
                "flex": 0.4,
                "minWidth": "50%",
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#FFF",
                  "fontSize": 18,
                  "height": 20,
                  "marginVertical": 4,
                  "width": "90%",
                }
              }
            >
              Property:
               
            </Text>
            <View
              style={
                Object {
                  "borderBottomWidth": 2,
                  "borderColor": "#FFF",
                  "color": "#FFF",
                  "height": 40,
                  "marginVertical": 8,
                  "width": "90%",
                }
              }
            >
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "Whispering Pines",
                      "textColor": undefined,
                      "value": "Whispering Pines",
                    },
                    Object {
                      "label": "Richmond Hills",
                      "textColor": undefined,
                      "value": "Richmond Hills",
                    },
                    Object {
                      "label": "Stoughton Arms",
                      "textColor": undefined,
                      "value": "Stoughton Arms",
                    },
                    Object {
                      "label": "Lincoln Avenue Apartments",
                      "textColor": undefined,
                      "value": "Lincoln Avenue Apartments",
                    },
                    Object {
                      "label": "Tuc-A-Way Apartments",
                      "textColor": undefined,
                      "value": "Tuc-A-Way Apartments",
                    },
                  ]
                }
                onChange={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
        </View>
        <TextInput
          allowFontScaling={true}
          keyboardAppearance="dark"
          onChangeText={[Function]}
          placeholder="Issue"
          placeholderTextColor="#8E8E93"
          rejectResponderTermination={true}
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#7D7E7D",
              "color": "#FFF",
              "fontSize": 18,
              "height": 40,
              "marginVertical": 8,
              "width": "90%",
            }
          }
          underlineColorAndroid="transparent"
        />
        <TextInput
          allowFontScaling={true}
          keyboardAppearance="dark"
          onChangeText={[Function]}
          placeholder="Details"
          placeholderTextColor="#8E8E93"
          rejectResponderTermination={true}
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#7D7E7D",
              "color": "#FFF",
              "fontSize": 18,
              "height": 40,
              "marginVertical": 8,
              "width": "90%",
            }
          }
          underlineColorAndroid="transparent"
        />
        <TextInput
          allowFontScaling={true}
          keyboardAppearance="dark"
          onChangeText={[Function]}
          placeholder="Other Notes"
          placeholderTextColor="#8E8E93"
          rejectResponderTermination={true}
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#7D7E7D",
              "color": "#FFF",
              "fontSize": 18,
              "height": 40,
              "marginVertical": 8,
              "width": "90%",
            }
          }
          underlineColorAndroid="transparent"
        />
        <View
          accessibilityLabel="Create Ticket Request Button"
          accessibilityRole="button"
          accessibilityState={Object {}}
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Create Ticket Request
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Screen Tests Rendering tests LoginPage rendering 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#121212",
      "flex": 1,
    }
  }
>
  <Image
    source={1}
    style={
      Object {
        "height": 80,
        "marginLeft": -10,
        "marginTop": 3,
        "resizeMode": "contain",
        "width": 100,
      }
    }
  />
  <Text
    style={
      Object {
        "color": "#FFF",
        "fontSize": 34,
        "marginBottom": 8,
        "marginTop": 8,
        "textAlign": "center",
      }
    }
  >
    Welcome Back
  </Text>
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    keyboardAppearance="dark"
    onChangeText={[Function]}
    placeholder="Username"
    placeholderTextColor="#8E8E93"
    rejectResponderTermination={true}
    style={
      Object {
        "borderBottomWidth": 2,
        "borderColor": "#FFF",
        "color": "#FFF",
        "fontSize": 18,
        "height": 40,
        "marginBottom": 8,
        "marginTop": 8,
        "width": "90%",
      }
    }
    underlineColorAndroid="transparent"
  />
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    keyboardAppearance="dark"
    onChangeText={[Function]}
    placeholder="Password"
    placeholderTextColor="#8E8E93"
    rejectResponderTermination={true}
    secureTextEntry={true}
    style={
      Object {
        "borderBottomWidth": 2,
        "borderColor": "#FFF",
        "color": "#FFF",
        "fontSize": 18,
        "height": 40,
        "marginBottom": 8,
        "marginTop": 8,
        "width": "90%",
      }
    }
    underlineColorAndroid="transparent"
  />
  <View
    accessibilityLabel="Sign In Button"
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Sign In
      </Text>
    </View>
  </View>
  <View
    accessibilityLabel="Go to Sign Up page"
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Donâ€™t have an account?
      </Text>
    </View>
  </View>
  <View
    accessibilityLabel="Secret Dev Button to Skip Sign In"
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Skip Sign In
      </Text>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`Screen Tests Rendering tests ProfileScreen rendering 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#000",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    collapsable={false}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
  >
    <View>
      <View>
        <View
          style={
            Object {
              "alignContent": "center",
              "alignSelf": "center",
              "flex": 1,
              "flexDirection": "column",
              "margin": 20,
            }
          }
        >
          <View
            style={
              Object {
                "alignContent": "flex-start",
                "alignItems": "flex-start",
                "alignSelf": "stretch",
                "borderRadius": 10,
                "direction": "ltr",
                "elevation": 6,
                "flexDirection": "column",
                "justifyContent": "flex-start",
                "overflow": "hidden",
                "padding": 20,
                "shadowColor": "#555555",
                "shadowOffset": Object {
                  "height": 10,
                  "width": 10,
                },
                "shadowOpacity": 10,
                "shadowRadius": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#FFF",
                  "fontSize": 17,
                  "padding": 2,
                }
              }
              testID="user-name"
            >
              Name:
               
              <Text
                style={
                  Object {
                    "color": "#FFF",
                    "fontSize": 17,
                    "padding": 2,
                  }
                }
                testID="user-first"
              >
                
              </Text>
               
              <Text
                style={
                  Object {
                    "color": "#FFF",
                    "fontSize": 17,
                    "padding": 2,
                  }
                }
                testID="user-last"
              >
                
              </Text>
            </Text>
            <Text
              style={
                Object {
                  "color": "#FFF",
                  "fontSize": 17,
                  "padding": 2,
                }
              }
              testID="user-email"
            >
              Email: 
              
            </Text>
            <Text
              style={
                Object {
                  "color": "#FFF",
                  "fontSize": 17,
                  "padding": 2,
                }
              }
              testID="user-phone"
            >
              Phone: 
              

              

            </Text>
            <Text
              style={
                Object {
                  "color": "#FFF",
                  "fontSize": 17,
                  "padding": 2,
                }
              }
              testID="user-entry"
            >
              Entry Permission:
                Accompanied entry only.
              


            </Text>
          </View>
          <View
            style={
              Object {
                "alignContent": "flex-start",
                "alignItems": "center",
                "alignSelf": "stretch",
                "direction": "ltr",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-evenly",
                "marginHorizontal": 10,
                "paddingHorizontal": 10,
                "paddingVertical": 2,
              }
            }
          >
            <View
              style={
                Object {
                  "alignContent": "stretch",
                  "alignSelf": "stretch",
                  "borderRadius": 5,
                  "elevation": 8,
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "flex-start",
                  "margin": 0,
                  "overflow": "hidden",
                  "shadowColor": "#555555",
                  "shadowOffset": Object {
                    "height": 10,
                    "width": 10,
                  },
                  "shadowOpacity": 10,
                  "shadowRadius": 10,
                }
              }
            >
              <View
                accessibilityLabel="Edit Profile Button"
                accessibilityRole="button"
                accessibilityState={Object {}}
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="edit-button"
              >
                <View
                  style={
                    Array [
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 18,
                          "margin": 8,
                          "textAlign": "center",
                        },
                      ]
                    }
                  >
                    Edit Profile
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Screen Tests Rendering tests PropertyScreen rendering 1`] = `
<RNCAppearanceProvider
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#121212",
        "flex": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#FFF",
          "fontSize": 34,
          "marginBottom": 8,
          "marginTop": 8,
          "textAlign": "center",
        }
      }
    >
      Property/Unit Management Page
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Add Unit Number"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Add Resident to Unit"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessibilityLabel="Add to Unit"
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Add
        </Text>
      </View>
    </View>
    <Text
      style={
        Object {
          "color": "#FFF",
          "fontSize": 34,
          "marginBottom": 8,
          "marginTop": 8,
          "textAlign": "center",
        }
      }
    >
      Add Property
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Property Name"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Street Address"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="City"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Zipcode"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessibilityLabel="Add Property"
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Add Property
        </Text>
      </View>
    </View>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Enter the Unit (in all lowercase)"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            undefined,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              undefined,
              undefined,
            ]
          }
        >
          <View
            collapsable={false}
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                ctx={
                  Object {
                    "menuActions": Object {
                      "_getOpenedMenu": [Function],
                      "_notify": [Function],
                      "closeMenu": [Function],
                      "isMenuOpen": [Function],
                      "openMenu": [Function],
                      "toggleMenu": [Function],
                    },
                    "menuRegistry": Object {
                      "getAll": [Function],
                      "getMenu": [Function],
                      "setOptionsCustomStyles": [Function],
                      "subscribe": [Function],
                      "unsubscribe": [Function],
                      "updateLayoutInfo": [Function],
                    },
                  }
                }
                style={
                  Array [
                    undefined,
                    undefined,
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": 30,
                      "fontWeight": "bold",
                      "margin": 15,
                    }
                  }
                >
                  to Resident (if there's a new resident make sure you add them first)
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "padding": 5,
                  },
                  undefined,
                  undefined,
                ]
              }
            >
              <Text
                style={
                  Object {
                    "color": "#000",
                    "fontSize": 30,
                    "fontWeight": "bold",
                    "padding": 2,
                  }
                }
              >
                Rachel
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "padding": 5,
                  },
                  undefined,
                  undefined,
                ]
              }
            >
              <Text
                style={
                  Object {
                    "color": "#000",
                    "fontSize": 30,
                    "fontWeight": "bold",
                    "padding": 2,
                  }
                }
              >
                Jerry
              </Text>
            </View>
          </View>
        </View>
      </View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          onLayout={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        />
      </RCTSafeAreaView>
    </View>
  </RCTSafeAreaView>
</RNCAppearanceProvider>
`;

exports[`Screen Tests Rendering tests SignUpPage rendering 1`] = `
<RNCAppearanceProvider
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#121212",
        "flex": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#FFF",
          "fontSize": 34,
          "marginBottom": 8,
          "marginTop": 50,
          "textAlign": "center",
        }
      }
    >
      Letâ€™s Get Started
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Username"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Email"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Password"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      secureTextEntry={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="First Name"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Last Name"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Phone Number"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Address"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      keyboardAppearance="dark"
      onChangeText={[Function]}
      placeholder="Unit"
      placeholderTextColor="#8E8E93"
      rejectResponderTermination={true}
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#FFF",
          "color": "#FFF",
          "fontSize": 18,
          "height": 40,
          "marginBottom": 8,
          "marginTop": 8,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessibilityLabel="Sign Up Button"
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Sign Up
        </Text>
      </View>
    </View>
    <View
      accessibilityLabel="Go to Login page"
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          I have an account
        </Text>
      </View>
    </View>
  </View>
</RNCAppearanceProvider>
`;
